{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","FindMovie","onMovieAdd","useState","query","setQuery","isLoading","setIsLoading","isNotFound","setIsNotFound","searchedMovie","setSearchedMovie","handleFormSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Object","hasOwn","movieData","Poster","Title","Plot","imdbID","finally","onSubmit","htmlFor","value","onChange","newTitle","target","type","id","placeholder","classNames","disabled","trim","onClick","App","setMovies","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc39566a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData, ResponseError } from './types';\n\nconst API_KEY = '8c2f3c9e';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie, MovieData } from '../../types';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onMovieAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNotFound, setIsNotFound] = useState(false);\n  const [searchedMovie, setSearchedMovie] = useState<Movie | null>(null);\n\n  const handleTitleChange = (newTitle: string): void => {\n    setIsNotFound(false);\n    setQuery(newTitle);\n  };\n\n  const handleAddToList = (movie: Movie): void => {\n    onMovieAdd(movie);\n    setQuery('');\n    setSearchedMovie(null);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    setIsNotFound(false);\n\n    getMovie(query)\n      .then(response => {\n        if (Object.hasOwn(response, 'Title')) {\n          const movieData = response as MovieData;\n\n          const imgUrl = movieData.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movieData.Poster;\n\n          setSearchedMovie({\n            imgUrl,\n            title: movieData.Title,\n            description: movieData.Plot,\n            imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            imdbId: movieData.imdbID,\n          });\n        }\n\n        if (Object.hasOwn(response, 'Error')) {\n          throw new Error();\n        }\n      })\n      .catch(() => {\n        setIsNotFound(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleFormSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={event => handleTitleChange(event.target.value)}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isNotFound,\n              })}\n            />\n          </div>\n\n          {isNotFound && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query.trim()}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {searchedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddToList(searchedMovie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {searchedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={searchedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    const isInList = movies.some(({ imdbId }) => imdbId === movie.imdbId);\n\n    if (isInList) {\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}